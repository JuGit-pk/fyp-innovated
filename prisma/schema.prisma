datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified Boolean   @default(false)
  image         String?
  password      String?
  accounts      Account[]
  Chat          Chat[]
}

model Chat {
  id             String      @id @default(cuid())
  name           String      @unique
  pdfLink        String
  pdfStoragePath String
  collectionName String
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  messages       Message[]
  user           User        @relation(fields: [userId], references: [id])
  userId         String
  summary        Summary?
  flashcards     Flashcard[]
  note           String?
}

model Flashcard {
  id       String @id @unique @default(cuid())
  question String
  answer   String
  chatId   String
  chat     Chat   @relation(fields: [chatId], references: [id])
}

model Message {
  id        String   @id @unique @default(cuid())
  createdAt DateTime @default(now())
  content   String
  role      Role     @default(user)
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    String
}

model Summary {
  id            String   @id @unique @default(cuid())
  introduction  String
  abstract      String
  keyTakeaways  String[]
  tldr          String
  mostUsedWords Word[]
  // one to one relation with chat  
  chat          Chat?    @relation(fields: [chatId], references: [id])
  chatId        String   @unique
}

model Word {
  id        String  @id @unique @default(cuid())
  text      String
  value     Int
  summary   Summary @relation(fields: [summaryId], references: [id])
  summaryId String
}

enum Role {
  user
  assistant
  system
  tool
  function
  data
}
